name: deploy-infra-and-apis
on:
  push:
    paths:
      - "api/**"
  workflow_dispatch:

env:
  LOCATION: uksouth
  RG_NAME: photo-app-uksouth-rg
  PHOTO_API_NAME: photo-api
  PHOTO_API_PORT: 8080
  RESIZE_API_NAME: resize-api
  RESIZE_API_PORT: 8080
  VERSION: 1.0.0

jobs:
  deploy-acr-job:
    runs-on: ubuntu-latest
    outputs:
      acrName: ${{ steps.deploy-acr-outputs.outputs.acrName }}
    steps:
      - name: checkout-code
        uses: actions/checkout@main

      - name: log-into-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: create-resource-group
        uses: azure/CLI@v1
        with:
          azcliversion: 2.67.0
          inlineScript: |
            az group create --name ${{ env.RG_NAME }} --location ${{ env.LOCATION }}

      - name: deploy-acr
        uses:  azure/arm-deploy@v1
        with:
          deploymentName: deploy-acr
          subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
          resourceGroupName: ${{ env.RG_NAME }}
          template: ./infra/modules/acr.bicep

      - name: deploy-acr-outputs
        run: |
          echo acrName=${{ steps.deploy-acr.outputs['acrName'] }} >> "$GITHUB_OUTPUT"
  
  build-photo-api-job:
    runs-on: ubuntu-latest
    needs: [deploy-acr-job]
    name: build-photo-api
    env:
      PHOTO_API_IMAGE: "${{ needs.deploy-acr-job.outputs.acrName }}.azurecr.io/${{ vars.PHOTO_API_NAME }}:${{ vars.VERSION }}"
    steps:
      - name: Checkout code
        uses: actions/checkout@main

      - name: Log into Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: acr-build-photo-api
        uses: azure/CLI@v1
        with:
          azcliversion: 2.67.0
          inlineScript: |
            az acr build \
              --registry ${{ needs.deploy-acr-job.outputs.acrName }} \
              -t ${{ env.PHOTO_API_IMAGE }} \
              --build-arg SERVICE_NAME=${{ env.PHOTO_API_NAME }} \
              --build-arg SERVICE_PORT=${{ env.PHOTO_API_PORT }} \
              -f ./Dockerfile .
       
      - run: |
          echo PHOTO_API_IMAGE=${{ env.PHOTO_API_IMAGE }} >> $GITHUB_ENV

  build-resize-api-job:
    runs-on: ubuntu-latest
    needs: deploy-acr-job
    name: build-resize-api-job
    env:
      RESIZE_API_IMAGE: "${{ needs.deploy-acr-job.outputs.acrName }}.azurecr.io/${{ vars.RESIZE_API_NAME }}:${{ vars.VERSION }}"
    steps:
      - name: checkout-code
        uses: actions/checkout@main

      - name: log-into-azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: acr-build-resize-api
        id: acr-build-resize-api
        uses: azure/CLI@v1
        with:
          azcliversion: 2.67.0
          inlineScript: |
            az acr build \
              --registry ${{ needs.deploy-acr-job.outputs.acrName }} \
              -t ${{ env.RESIZE_API_IMAGE }} \
              --build-arg SERVICE_NAME=${{ env.RESIZE_API_NAME }} \
              --build-arg SERVICE_PORT=${{ env.RESIZE_API_PORT }} \
              -f ./Dockerfile .

      - run: |
          echo RESIZE_API_IMAGE=${{ env.RESIZE_API_IMAGE }} >> $GITHUB_ENV

  build-and-deploy-infra:
    runs-on: ubuntu-latest
    needs: [deploy-acr-job, build-photo-api-job, build-resize-api-job]
    steps:
    - name: checkout-code
      uses: actions/checkout@main

    - name: log-into-azure
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy-infra
      uses: azure/arm-deploy@v1
      with:
        subscriptionId: ${{ secrets.AZURE_SUBSCRIPTION }}
        deploymentName: deploy-infra
        resourceGroupName: ${{ env.RG_NAME }}
        template: ./infra/main.bicep
        parameters: "acrName=${{ needs.deploy-acr-job.outputs.acrName }} photoApiContainerImage=${{ vars.PHOTO_API_IMAGE }} resizeApiContainerImage=${{ vars.RESIZE_API_IMAGE }}"
        failOnStdErr: true
