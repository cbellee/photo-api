name: update-container-apps
on:
  push:
    paths:
      - "api/**"
  workflow_dispatch:

env:
  DNS_ZONE_RG_NAME: 'external-domain-rg'
  TEMPLATE_FILE_PATH: ./infra/main.bicep
  PHOTO_API_NAME: 'photo'
  PHOTO_API_PORT: 8080
  RESIZE_API_NAME: 'resize'
  RESIZE_API_PORT: 8080
  VERSION: 1.0.0

jobs:
  get-vars-job:
    runs-on: ubuntu-latest
    outputs:
      acrName: ${{ steps.get-acr.outputs.acrName }}
      resizeApiImage: ${{ steps.get-acr.outputs.resizeApiImage }}
      photoApiImage: ${{ steps.get-acr.outputs.photoApiImage }}
      rgName: ${{ steps.gen-rg-name.outputs.rgName }}
    steps:
      - name: checkout-code
        id: checkout-code
        uses: actions/checkout@main

      - name: gen-rg-name
        id: gen-rg-name
        run: |
            echo "rgName: ${{ vars.APP_NAME }}-${{ vars.LOCATION }}-rg"
            echo "rgName=${{ vars.APP_NAME }}-${{ vars.LOCATION }}-rg" >> "$GITHUB_OUTPUT"
            echo "RG_NAME=${{ vars.APP_NAME }}-${{ vars.LOCATION }}-rg" >> "$GITHUB_ENV"

      - name: short-sha
        id: short-sha
        run: |
            echo "sha: sha=$(git rev-parse --short HEAD)"
            echo "SHA=$(git rev-parse --short HEAD)" >> "$GITHUB_ENV"

      - name: login-azure
        id: login-azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: get-acr
        id: get-acr
        uses:  azure/cli@v2
        with:
          azcliversion: 2.67.0
          inlineScript: |
            acrName=$(az acr list --resource-group $RG_NAME --query '[].name' --output tsv)
            echo "ACR_NAME: $acrName"
            echo "ACR_NAME=$acrName" >> "$GITHUB_ENV"
            echo "ACR_NAME=$acrName" >> "$GITHUB_OUTPUT"

      - name: gen-image-names
        id: gen-image-names
        run: |
            echo "photoApiImage: $ACR_NAME.azurecr.io/${{ vars.PHOTO_API_NAME }}:${{ vars.VERSION }}"
            echo "photoApiImage=$ACR_NAME.azurecr.io/${{ vars.PHOTO_API_NAME }}:${{ vars.VERSION }}" >> "$GITHUB_OUTPUT"
            echo "resizeApiImage: $ACR_NAME.azurecr.io/${{ vars.RESIZE_API_NAME }}:${{ vars.VERSION }}"
            echo "resizeApiImage=$ACR_NAME.azurecr.io/${{ vars.RESIZE_API_NAME }}:${{ vars.VERSION }}" >> "$GITHUB_OUTPUT"

  build-photo-api-job:
    runs-on: ubuntu-latest
    needs: [get-vars-job]
    steps:
      - name: checkout-code
        id: checkout-code
        uses: actions/checkout@main

      - name: login-azure
        id: login-azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: acr-build-photo-api
        id: acr-build-photo-api
        uses: azure/cli@v2
        with:
          azcliversion: 2.67.0
          inlineScript: |
            az acr build \
              --registry ${{ needs.get-vars-job.outputs.acrName }} \
              -t "${{ needs.get-vars-job.outputs.photoApiImage }}" \
              --build-arg SERVICE_NAME=${{ env.PHOTO_API_NAME }} \
              --build-arg SERVICE_PORT=${{ env.PHOTO_API_PORT }} \
              -f ./Dockerfile .

  build-resize-api-job:
    runs-on: ubuntu-latest
    needs: get-vars-job
    steps:
      - name: checkout-code
        id: checkout-code
        uses: actions/checkout@main

      - name: login-azure
        id: login-azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: acr-build-resize-api
        id: acr-build-resize-api
        uses: azure/cli@v2
        with:
          azcliversion: 2.67.0
          inlineScript: |
            az acr build \
              --registry ${{ needs.get-vars-job.outputs.acrName }} \
              -t "${{ needs.get-vars-job.outputs.resizeApiImage }}" \
              --build-arg SERVICE_NAME=${{ env.RESIZE_API_NAME }} \
              --build-arg SERVICE_PORT=${{ env.RESIZE_API_PORT }} \
              -f ./Dockerfile .

  update-photo-container-app:
    runs-on: ubuntu-latest
    needs: [get-vars-job, build-photo-api-job]
    steps:
    - name: checkout-code
      id: checkout-code
      uses: actions/checkout@main

    - name: login-azure
      id: login-azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy-photo-app
      id: deploy-photo-app
      uses: azure/cli@v2
      continue-on-error: false
      with:
        azcliversion: 2.67.0
        inlineScript: |
          az containerapp update --name photo --resource-group ${{ needs.get-vars-job.outputs.rgName }} --image ${{ needs.get-vars-job.outputs.photoApiImage }}
 
  update-resize-container-app:
    runs-on: ubuntu-latest
    needs: [get-vars-job, build-resize-api-job]
    steps:
    - name: checkout-code
      id: checkout-code
      uses: actions/checkout@main

    - name: login-azure
      id: login-azure
      uses: azure/login@v2
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}

    - name: deploy-resize-app
      id: deploy-resize-app
      uses: azure/cli@v2
      continue-on-error: false
      with:
        azcliversion: 2.67.0
        inlineScript: |
          az containerapp update --name photo --resource-group ${{ needs.get-vars-job.outputs.rgName }} --image ${{ needs.get-vars-job.outputs.resizeApiImage }}